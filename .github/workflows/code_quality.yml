name: Code Quality

on: [push, pull_request]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: ["20.x"]

        db-name:
          - e2e-testing-db
        db-user:
          - user
        db-password:
          - password
        db-host:
          - localhost
        db-port:
          - 5432
    services:
      postgis:
        image: postgis/postgis:latest
        env:
          POSTGRES_DB: ${{ matrix.db-name }}
          POSTGRES_USER: ${{ matrix.db-user }}
          POSTGRES_PASSWORD: ${{ matrix.db-password }}
        ports:
          - ${{ matrix.db-port }}:${{ matrix.db-port }}
        # Set health checks to wait until postgres has started
        options: --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js ${{ matrix.node-version }}
        # v3 does not work with act, don't know why...
        uses: actions/setup-node@v4

        with:
          cache-dependency-path: "./backend/package-lock.json"
          node-version: ${{ matrix.node-version }}
          cache: "npm"

      - name: Install dependencies
        run: npm install
        working-directory: ./backend

      - name: Run eslint
        run: npm run lint
        working-directory: ./backend

      - name: Run the unit tests
        run: npm run test:unit:cov
        working-directory: ./backend

      - name: Prepare database schema for e2e test
        run: npx prisma migrate deploy
        working-directory: ./backend
        env:
          DATABASE_URL: postgresql://${{ matrix.db-user }}:${{ matrix.db-password }}@${{ matrix.db-host }}:${{ matrix.db-port }}/${{ matrix.db-name }}?schema=public

      - name: Run the e2e tests
        run: npm run test:e2e:cov
        working-directory: ./backend
        env:
          DATABASE_URL: postgresql://${{ matrix.db-user }}:${{ matrix.db-password }}@${{ matrix.db-host }}:${{ matrix.db-port }}/${{ matrix.db-name }}?schema=public

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v4.0.1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          slug: gilengel/trail
